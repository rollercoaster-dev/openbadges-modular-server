name: CI

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches: [ main, beta ]
  pull_request:
    branches: [ main, beta ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - uses: ./.github/actions/setup-bun
      - name: Run linter
        run: bun run lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - uses: ./.github/actions/setup-bun
      - name: Run type checker
        run: bun run typecheck

  test:
    name: Test (${{ matrix.database.name }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database:
          - name: SQLite
            type: sqlite
            test_command: bun run test:sqlite
          - name: PostgreSQL
            type: postgresql
            test_command: bun run test:pg
            migrate_command: bun run db:migrate:pg
            db_url: postgres://testuser:testpassword@localhost:5433/openbadges_test
    services:
      postgres:
        # Only start PostgreSQL service for PostgreSQL tests
        image: ${{ matrix.database.type == 'postgresql' && 'postgres:15.8' || '' }}
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: openbadges_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - uses: ./.github/actions/setup-bun

      - name: Wait for PostgreSQL
        if: matrix.database.type == 'postgresql'
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h localhost -p 5433 -U testuser; do
            echo "PostgreSQL not ready yet, waiting..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Run Database Migrations
        if: matrix.database.migrate_command
        env:
          DB_TYPE: ${{ matrix.database.type }}
          DATABASE_URL: ${{ matrix.database.db_url }}
        run: ${{ matrix.database.migrate_command }}

      - name: Run Tests
        env:
          DB_TYPE: ${{ matrix.database.type }}
          DATABASE_URL: ${{ matrix.database.db_url }}
        run: ${{ matrix.database.test_command }}

  ci-gate:
    name: CI Gate
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    if: success()
    steps:
      - name: Mark as successful
        run: echo "All CI checks passed successfully!"
