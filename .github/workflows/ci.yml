name: PR Validation

on:
  pull_request:
    branches: [ main ]

# Limit permissions of the GITHUB_TOKEN
permissions:
  contents: read

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: bun run lint || echo "Linting issues found, but continuing build"

      - name: Type check
        run: bun run typecheck

  sqlite-tests:
    name: SQLite Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          # Install system dependencies for better-sqlite3
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev
          bun install

      - name: Create E2E test directory
        run: |
          mkdir -p tests/e2e
          touch tests/e2e/test_database.sqlite
          chmod 777 tests/e2e/test_database.sqlite
          chmod 777 tests/e2e

      - name: Create migrations directory
        run: |
          mkdir -p drizzle/migrations
          mkdir -p drizzle/pg-migrations
          # Verify directories
          ls -la drizzle/

      - name: Run tests with SQLite
        run: bun run test:coverage
        env:
          # Database configuration for SQLite
          DB_TYPE: sqlite
          SQLITE_FILE: './tests/e2e/test_database.sqlite'
          # Test environment variables
          CI: 'true'
          NODE_PATH: "."
          NODE_ENV: 'test'
          # API key for E2E tests
          AUTH_DISABLE_RBAC: 'true'
          AUTH_API_KEY_TEST: verysecretkeye2e:test-user:E2E Test API Key
          # Format: AUTH_API_KEY_TEST=<API_KEY>:<USER_ID>:<DESCRIPTION>
          AUTH_API_KEY_E2E: verysecretkeye2e:test-user:E2E Test API Key
          DEBUG: 'drizzle*'

  postgresql-tests:
    name: PostgreSQL Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: openbadges_test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Create E2E test directory
        run: |
          mkdir -p tests/e2e
          touch tests/e2e/test_database.sqlite
          chmod 777 tests/e2e/test_database.sqlite
          chmod 777 tests/e2e

      - name: Create migrations directory
        run: |
          mkdir -p drizzle/migrations
          mkdir -p drizzle/pg-migrations
          # Verify directories
          ls -la drizzle/

      - name: Run integration tests with PostgreSQL
        run: bun run test:integration:pg
        env:
          NODE_PATH: "."
          NODE_ENV: test
          AUTH_DISABLE_RBAC: true
          AUTH_API_KEY_TEST: verysecretkeye2e:test-user:E2E Test API Key
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: openbadges_test
          DEBUG: drizzle*

      - name: Run E2E tests with PostgreSQL
        run: bun run test:e2e:pg
        env:
          NODE_PATH: "."
          NODE_ENV: test
          AUTH_DISABLE_RBAC: true
          AUTH_API_KEY_TEST: verysecretkeye2e:test-user:E2E Test API Key
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: openbadges_test
          DEBUG: drizzle*

  upload-coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: [sqlite-tests, postgresql-tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          fail_ci_if_error: false
