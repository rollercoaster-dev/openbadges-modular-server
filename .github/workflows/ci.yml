name: CI

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches: [ main, beta ]
  pull_request:
    branches: [ main, beta ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup-bun
      - name: Run linter
        run: bun run lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup-bun
      - name: Run type checker
        run: bun run typecheck

  test-sqlite:
    name: Test (SQLite)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup-bun
      - name: Run SQLite tests
        run: bun run test:sqlite

  test-postgres:
    name: Test (PostgreSQL)
    runs-on: ubuntu-latest
    services:
      postgres:
        # TODO: Pin to specific digest for consistency (e.g., postgres:15@sha256:...)
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: openbadges_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup-bun
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433 -U testuser; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      - name: Run PostgreSQL Migrations
        env:
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
        run: bun run db:migrate:pg
      - name: Run PostgreSQL tests
        env:
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
        run: bun run test:pg

  ci-gate:
    name: CI Gate
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test-sqlite, test-postgres]
    if: success()
    steps:
      - name: Mark as successful
        run: echo "All CI checks passed successfully!"
