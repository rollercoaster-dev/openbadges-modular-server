name: PR Validation

on:
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: bun run lint || echo "Linting issues found, but continuing build"

      - name: Type check
        run: bun run typecheck

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: openbadges_test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          # Install system dependencies for better-sqlite3
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev
          bun install

      - name: Migrate PostgreSQL database
        run: |
          echo "Running PostgreSQL migrations..."
          NODE_ENV=test DB_TYPE=postgresql bun run db:generate:pg
          NODE_ENV=test DB_TYPE=postgresql bun run db:migrate:pg
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/openbadges_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: openbadges_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          DB_TYPE: postgresql

      - name: Run tests
        run: bun run test:coverage
        env:
          # Database configuration - use the same for all tests
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/openbadges_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: openbadges_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          DB_TYPE: postgresql
          SQLITE_FILE: ':memory:'
          # Test environment variables
          CI: 'true'
          NODE_PATH: "."
          NODE_ENV: 'test'
          # API key for E2E tests
          AUTH_API_KEY_TEST: verysecretkeye2e:test-user:E2E Test API Key
          # Format: AUTH_API_KEY_TEST=<API_KEY>:<USER_ID>:<DESCRIPTION>
          AUTH_API_KEY_E2E: verysecretkeye2e:test-user:E2E Test API Key

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          fail_ci_if_error: false
