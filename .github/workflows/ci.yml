name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your preferred LTS version

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run migrations (SQLite)
        env:
          NODE_ENV: test
          DB_TYPE: sqlite
          SQLITE_DB_PATH: ./tests/e2e/test_database.sqlite # Using a dedicated test DB
        run: bun run db:migrate:sqlite

      - name: Run tests (SQLite)
        env:
          NODE_ENV: test
          DB_TYPE: sqlite
          SQLITE_DB_PATH: ./tests/e2e/test_database.sqlite
          # Add any other necessary environment variables for tests
        run: bun test # Assuming 'bun test' is your test command

  test-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15 # Or your preferred PostgreSQL version
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: openbadges_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Wait for PostgreSQL to be healthy
        run: |
          until pg_isready -h localhost -p 5433 -U testuser -d openbadges_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready."
        timeout-minutes: 1


      - name: Run migrations (PostgreSQL)
        env:
          NODE_ENV: test
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
          # Drizzle Kit might also need individual DB credential env vars
          # Or ensure your drizzle-config-helper.ts can parse DATABASE_URL for Drizzle Kit
        run: bun run db:migrate:pg

      - name: Run tests (PostgreSQL)
        env:
          NODE_ENV: test
          DB_TYPE: postgresql
          DATABASE_URL: postgres://testuser:testpassword@localhost:5433/openbadges_test
          # Add any other necessary environment variables for tests
        run: bun test # Assuming 'bun test' is your test command
