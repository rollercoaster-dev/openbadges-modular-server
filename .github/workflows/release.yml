name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - beta
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.augment/**'
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       contains(fromJson('["main", "beta"]'), github.event.workflow_run.head_branch))
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
          fetch-depth: 0
          # A PAT is required here to allow this workflow to trigger the Docker workflow.
          # The default GITHUB_TOKEN does not have sufficient permissions.
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: false

      - uses: ./.github/actions/setup-bun

      - name: Get next version
        id: get-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          BRANCH_NAME=${{ github.event.workflow_run.head_branch || github.ref_name }}

          # Increment patch version
          IFS='.' read -r MAJOR MINOR PATCH_PRERELEASE <<< "$CURRENT_VERSION"
          IFS='-' read -r PATCH PRERELEASE <<< "$PATCH_PRERELEASE"

          if [[ "$BRANCH_NAME" == "main" ]]; then
            NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          else
            # For beta, increment the prerelease number or start it
            if [[ -z "$PRERELEASE" ]]; then
              PRERELEASE_NUM=1
            else
              PRERELEASE_NUM=$(echo $PRERELEASE | sed 's/beta.//')
              PRERELEASE_NUM=$((PRERELEASE_NUM + 1))
            fi
            NEW_VERSION="$MAJOR.$MINOR.$PATCH-$BRANCH_NAME.$PRERELEASE_NUM"
          fi

          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version and commit
        run: |
          NEW_VERSION="${{ steps.get-version.outputs.version }}"
          BRANCH_NAME=${{ github.event.workflow_run.head_branch || github.ref_name }}

          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" package.json

          git add package.json
          git commit -m "chore(release): v$NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
          git push origin HEAD:$BRANCH_NAME

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.get-version.outputs.version }}"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
