name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/README.md'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      # Manual version bump and tag creation instead of using semantic-release
      - name: Get next version
        id: get-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Extract major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          NEW_VERSION="${{ steps.get-version.outputs.version }}"
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" package.json

      - name: Commit and tag new version
        run: |
          NEW_VERSION="${{ steps.get-version.outputs.version }}"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add package.json
          git commit -m "chore(release): $NEW_VERSION [skip ci]"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.get-version.outputs.version }}"
          name: "Release v${{ steps.get-version.outputs.version }}"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
