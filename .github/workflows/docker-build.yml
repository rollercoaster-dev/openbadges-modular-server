name: Build and Push Multi-Architecture Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (leave empty for latest release)'
        required: false
        default: ''

jobs:
  docker:
    name: Build and Push Multi-Architecture Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      # Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch

      # Build and push multi-architecture image
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # Verify that the image was built for all specified architectures
      - name: Verify multi-architecture support
        run: |
          # Wait a moment for the manifest to be available
          sleep 10

          # Get the first tag from the metadata output
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          echo "Verifying architectures for image: $FIRST_TAG"

          # Install Docker CLI plugins if needed
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

          # Inspect the manifest and check for both architectures
          MANIFEST=$(docker manifest inspect $FIRST_TAG)
          echo "$MANIFEST"

          # Check for amd64 architecture
          if echo "$MANIFEST" | grep -q "amd64"; then
            echo "✅ amd64 architecture found"
          else
            echo "❌ amd64 architecture not found"
            exit 1
          fi

          # Check for arm64 architecture
          if echo "$MANIFEST" | grep -q "arm64"; then
            echo "✅ arm64 architecture found"
          else
            echo "❌ arm64 architecture not found"
            exit 1
          fi

          echo "✅ Multi-architecture verification successful"
